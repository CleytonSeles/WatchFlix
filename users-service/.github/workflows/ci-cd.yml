name: CI/CD Pipeline

# O pipeline será acionado em push e pull_request para a branch main
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do código
      - name: Checkout Code
        uses: actions/checkout@v3

      # Passo 2: Configurar o JDK 17 (usando a distribuição Temurin)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      # Passo 3: Build do projeto com Gradle (gera o JAR)
      - name: Build with Gradle
        run: ./gradlew build

      # Passo 4: Construir a Imagem Docker
      - name: Build Docker Image
        run: docker build -t cleytonseles/watchflix-users-service .

      # Passo 5 (Opcional): Executar Testes
      - name: Run Tests
        run: ./gradlew test

      # Passo 6 (Opcional): Log in no Docker Hub (caso queira enviar a imagem para o Docker Hub)
      - name: Log in to Docker Hub
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_PASSWORD }}
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      # Passo 7 (Opcional): Enviar a Imagem Docker para o Docker Hub
      - name: Push Docker Image
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_PASSWORD }}
        run: docker push cleytonseles/watchflix-users-service
